* rework show_header+show_pdf_download and reject options (they are hierarchical)
* update call could skip setting attachments if they didn't change
* add tests that there are no setters for fields of ScriveSet/Dict type
* Signatory.author should not be writable
* ScriveFile object
** should not be consturctable by users
** add tvu thingies for file/dir path args to download methods
* add tests for failing _from_json_obj()
* add setup.py
* port to other python versions
* write utility functions
** field
*** set_single_placement
*** add_placement
* MaybeTipSide could use nullable
* Document.number_of_days_to_remind needs info that it's clipped on the backend to max of days to sign
* pickling support
* Scrive
** ctor that uses user/pass credentials
** get call
*** handle non-existing/not authorized document
** update call
*** check if id is present - if not exception
*** check status before making request
*** figure out how objectversion works
** create_from_file
*** handle exceptions
** handle generic request exceptions
*** passing to all ScriveObjects

* things todo after apiv2 is implemented
** __str__ methods for scrive objects
** write a documentation from code and get someone from scrive to review it
** write a documentation
** Signatory needs a userid field
*** maybe a whole User type?
** add field_handler
* Signatory needs a csv field
** research update validation
** list of lists of unicode objects
** implement Document.save() method with syncing of possible old versions of objects
* API v2
** Field
*** Base field type only has type, obligatory, placements
*** base class should not be exported
*** NameField
**** type=='name'
**** order:int, required, >=1 ?
**** value: text
**** should_be_filled_by_sender: bool
*** StandardField
**** type=='company_number'|'email'|'mobile'|'personal_number'
**** value: text
**** should_be_filled_by_sender: bool
*** CustomField
**** type=='text'
**** name:non empty text (?)
**** value: text
**** should_be_filled_by_sender: bool
*** Signature
**** type=='signature'
**** name:non empty text (?)
**** signature: bytes
**** NO should_be_filled_by_sender
*** Checkbox
**** type=='checkbox'
**** name:non empty text (?)
**** is_checked:bool
**** should_be_filled_by_sender: bool
*** Base class
**** lose value
**** add type
***** string, only docs, no enum type
**** lose closed
**** should_be_filled_by_sender, that is const true for signatures
**** _from_json_obj() should be done at the end
**** _to_json_obj should probably be moved to subclasses
**** private ctor
**** name should be pushed to subclasses
*** standardfieldtype
**** remove first_name
**** remove last_name
**** remove first_name
**** remove company_name (?)
*** standardfield
**** no name arg
**** name RO property that returns type
**** value stays
**** sbfbs stays
**** add from/to json methods
