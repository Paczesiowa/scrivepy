* rework show_header+show_pdf_download and reject options (they are hierarchical)
* update call could skip setting attachments if they didn't change
* Signatory.author should not be writable
* ScriveFile object
** should not be consturctable by users
** add tvu thingies for file/dir path args to download methods
* add setup.py
* port to other python versions
* write utility functions
** field
*** set_single_placement
*** add_placement
* MaybeTipSide could use nullable
* Document.number_of_days_to_remind needs info that it's clipped on the backend to max of days to sign
* pickling support
* Scrive
** ctor that uses user/pass credentials
** get call
*** handle non-existing/not authorized document
** update call
*** check if id is present - if not exception
*** check status before making request
*** figure out how objectversion works
** create_from_file
*** handle exceptions
** handle generic request exceptions
*** passing to all ScriveObjects

* things todo after apiv2 is implemented
** __str__ methods for scrive objects
** write a documentation from code and get someone from scrive to review it
** write a documentation
** Signatory needs a userid field
*** maybe a whole User type?
** add field_handler
* Signatory needs a csv field
** research update validation
** list of lists of unicode objects
** implement Document.save() method with syncing of possible old versions of objects
* Signatory needs a status field
* sort tvu/__init__ arguments (and most other things)
* use functional syntax for enums
* before update call verify fields/signatories
** NameField
*** names have proper numbers (continous, >=1, no duplicates)
** TextField
*** text fields have no duplicates (by name)
** Signature
*** signatures have no duplicates (by name)
** Checkbox
*** checkboxes have no duplicates (by name)
** StandardField
*** standard fields have no duplicates
** Signatory
*** sign_orders have proper numbers (continous, >=1, no duplicates, no holes)
* get rid of test_field()
* add custom UA to requests
* clean up tests/utils.py
* follow convention that bool attrs start with is_
* validation of RO enums returned from server (e.g. email_delivery_status)
* nemid support
* API v2
** Placement
*** test_tip
**** tests for serialized_values work by accident, should disappear after func syntax for enums
** Field
*** StandardField
**** company_name ??
*** Signature
**** signature
***** RO
***** no ctor param
***** file_id/null
** Signatory
*** user_id
**** add get_user() method
*** highlighted_pages
*** attachments
*** full_name
** Document
*** parties
*** file
*** sealed_file
**** method that will retry to download it
*** author_attachments
*** timeout_time
*** auto_remind_time
*** status
*** days_to_sign
*** days_to_remind
*** display_options
*** invitation_message
*** confirmation_message
*** api_callback_url
*** object_version
*** access_token
*** timezone
*** tags
*** is_template
*** is_saved
*** is_shared
*** is_trashed
*** is_deleted
*** viewer
** API
